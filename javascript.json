{
	// Place your snippets for javascript here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Controller Template": {
		"prefix": "ct",
		"body": [
			"const $1 = require('../models/$1.js');",

			"module.exports.controller = (app) => {",
			"  // $2",
			"  app.post('/$3', (req, res) => {",
			"    const $4 = req.body.$4;",
			"    const new$5 = new $5({",
			"      $4,",
			"    });",
			"    $5.$6(new$5, (error, $7) => {",
			"      if (error) {",
			"        res.status(422).json({",
			"          message: 'Something went wrong, Please try again after scome time!',",
			"        })",
			"      }",
			"      res.send({",
			"        $7",
			"      });",
			"    });",
			"  });",
			"};"
		],
		"description": "Controller Template"
	},

	"Get Request": {
		"prefix": "gr",
		"body": [
			"// $1",
			"app.get('/$2', (req, res) => {",
			"  const $3 = req.body.$3;",
			"  const new$4 = new $4({",
			"    $3,",
			"  });",
			"  $4.$5(new$4, (error, $6) => {",
			"    if (error) {",
			"      res.status(422).json({",
			"        message: 'Something went wrong, Please try again after scome time!',",
			"      })",
			"    }",
			"    res.send({",
			"      $6",
			"    });",
			"  });",
			"});",
		],
		"description": "Get Request"
	},

	"Post Request": {
		"prefix": "pr",
		"body": [
			"// $1",
			"app.post('/$2', (req, res) => {",
			"  const $3 = req.body.$3;",
			"  const new$4 = new $4({",
			"    $3,",
			"  });",
			"  $4.$5(new$4, (error, $6) => {",
			"    if (error) {",
			"      res.status(422).json({",
			"        message: 'Something went wrong, Please try again after scome time!',",
			"      })",
			"    }",
			"    res.send({",
			"      $6",
			"    });",
			"  });",
			"});",
		],
		"description": "Post Request"
	},

	"Model Schema": {
		"prefix": "ms",
		"body": [
			"const mongoose = require('mongoose');",
			"const Schema = mongoose.Schema;",
			"const $1Schema = new Schema({",
			"  $2: String,",
			"});",
			"const $1 = mongoose.model('$1', $1Schema);",
			"module.exports = $1;",
		],
		"description": "Model Schema"
	},

	"Model Function": {
		"prefix": "mf",
		"body": [
			"// $1",
			"module.exports.$2 = ($3, callback) => {",
			"/*create",
			"  const $3Resource = $3;",
			"  $3Resource.$4 = $5;",
			"  $3Resource.save(callback);",
			"*/",
			"/*condition search",
			"  const query = {",
			"    $3",
			"  };",
			"  $4.findOne(query, callback);",
			"*/",
			"};",
		],
		"description": "Model Function"
	},

	"For_Loop": {
		"prefix": "for",
		"body": [
			"for (const ${2:element} of ${1:array}) {",
			"\t$0",
			"}"
		],
		"description": "For Loop"
	}
}
